DELIMITER ;;
DROP PROCEDURE IF EXISTS  wsp_purchaseSubscription;
CREATE DEFINER='root'@'10.10.26.21' PROCEDURE wsp_purchaseSubscription (
/******************************************************************************
**
** CREATION:
**   Author:  Mike Stairs
**   Date:  November 26, 2004
**   Description:  purchase subscription for user
**
**
** REVISION(S):
**   Author: Mike Stairs
**   Date: Jan 12, 2006
**   Description: added durationUnits
**
**   Author:  Mike Stairs
**   Date:    Feb 27, 2006
**   Description: also update dateLastUsed column in CreditCard table
**
**   Author: Andy Tran
**   Date: May 5, 2010
**   Description: add location tax IDs
**
******************************************************************************/
at_userId DECIMAL(12,0),
at_xactionId INT,
at_xactionTypeId TINYINT,
at_dateNow DATETIME,
at_cost    DECIMAL(10,2),
at_tax     DECIMAL(10,2),
at_costUSD DECIMAL (5,2),
at_taxUSD  DECIMAL (5,2),
at_offerDetailId SMALLINT,
at_contentId     SMALLINT,
at_subscriptionTypeId SMALLINT,
at_purchaseTypeId TINYINT,
at_billingLocationId SMALLINT,
at_currencyId TINYINT,
at_creditCardId INT,
at_adminUserId INT,
at_paymentNumber VARCHAR(40),
at_cardProcessor CHAR(1),
at_duration INT,
at_userTrans BIT,
at_durationUnits CHAR(1),
at_taxCountryId SMALLINT,
at_taxJurisdictionId INT
)
proc_label:BEGIN

DECLARE at_dateNowGMT DATETIME;

DECLARE EXIT HANDLER FOR SQLWARNING
BEGIN
   ROLLBACK;
END;

DECLARE	EXIT HANDLER FOR SQLEXCEPTION
BEGIN
   ROLLBACK;
END;

SET at_dateNowGMT = UTC_TIMESTAMP();

IF at_xactionId < 0 
THEN 
   CALL wsp_XactionId(at_xactionId);
   IF !(at_xactionId > 0)
   THEN
      LEAVE proc_label;
   END IF;
END IF;

START TRANSACTION;

IF at_adminUserId > 0 
THEN 
   INSERT INTO AdminAccountTransaction (xactionId, adminUserId, userId, dateCreated) 
            VALUES (at_xactionId, at_adminUserId, at_userId, at_dateNowGMT);
END IF;
        
INSERT INTO SubscriptionTransaction 
        (   xactionId,
            userId,
            cardId,
            xactionTypeId,
            contentId,
            subscriptionTypeId,
            dateCreated,
            duration,
            userTrans,
            durationUnits
        )
        VALUES 
        (   at_xactionId,
            at_userId,
            at_creditCardId,
            at_xactionTypeId,
            at_contentId,
            at_subscriptionTypeId,
            at_dateNowGMT,
            at_duration,
            at_userTrans,
            at_durationUnits
        );
        
INSERT INTO Purchase 
        (   xactionId,
                purchaseTypeId,
                billingLocationId,
                subscriptionOfferDetailId,
                currencyId,
                cost,
                costUSD,
                tax,
                taxUSD,
                userId,
                dateCreated,
                creditCardId,
                cardProcessor,
                paymentNumber,
                xactionTypeId,
                taxCountryId,
                taxJurisdictionId
              )
        VALUES (
                at_xactionId,
                at_purchaseTypeId,
                at_billingLocationId,
                at_offerDetailId,
                at_currencyId,
                at_cost,
                at_costUSD,
                at_tax,
                at_taxUSD,
                at_userId,
                at_dateNowGMT,
                at_creditCardId,
                at_cardProcessor,
                at_paymentNumber,
                at_xactionTypeId,
                at_taxCountryId,
                at_taxJurisdictionId
              );

-- update CreditCard dateLastUsed column

IF at_creditCardId > 0 
THEN 
   UPDATE CreditCard SET dateLastUsed = at_dateNow WHERE creditCardId = at_creditCardId;
END IF;

COMMIT;

SELECT at_xactionId;

/* ### DEFNCOPY: END OF DEFINITION */
END;;
DELIMITER ;
