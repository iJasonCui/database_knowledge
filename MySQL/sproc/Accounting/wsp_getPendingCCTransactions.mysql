DELIMITER ;;
DROP PROCEDURE IF EXISTS  wsp_getPendingCCTransactions;
CREATE DEFINER='root'@'10.10.26.21' PROCEDURE wsp_getPendingCCTransactions (
/******************************************************************************
**
** CREATION:
**   Author:       Mike Stairs
**   Date:         May 30 2005
**   Description:  return list on transactions to be settled
**
** REVISION(S):
**   Author:       Mike Stairs
**   Date:         July 27, 2005
**   Description:  Ignore error rows in response table
**
**   Author:       Andy Tran
**   Date:         February, 2008
**   Description:  Added encodedCardId
**
**   Author:       Andy Tran
**   Date:         June 23, 2008
**   Description:  Added renewalFlag
**
******************************************************************************/
)
BEGIN

DECLARE at_batchId 		INT;
DECLARE at_dateGMT              DATETIME;
DECLARE at_xactionId            INT;

DECLARE done INT DEFAULT FALSE;
DECLARE CUR_CCTrans CURSOR FOR SELECT xactionId FROM CreditCardTransaction WHERE CCTranStatusId=1; ## 1 MEANS 'NEW/PENDING'
DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;  

SET at_dateGMT = UTC_TIMESTAMP();
CALL wsp_BatchId (at_batchId);

OPEN CUR_CCTrans;

read_loop: LOOP
  
  FETCH CUR_CCTrans INTO at_xactionId;
  
  IF done THEN
     LEAVE read_loop;
  END IF;

  UPDATE CreditCardTransaction 
     SET batchId = at_batchId, dateExtracted = at_dateGMT, CCTranStatusId = 3 
   WHERE xactionId = at_xactionId;

END LOOP;
  
CLOSE CUR_CCTrans;

SELECT c.xactionId,
       userId,
       merchantId,
       actionCode,
       p.cardType,
       p.cardNumber,
       p.cardExpiryMonth,
       p.cardExpiryYear,
       p.amount,
       p.currencyCode,
       p.cardHolderName,
       p.userStreet,
       p.userCity,
       p.userState,
       p.userCountryCode,
       p.userPostalCode,
       r.responseCode,
       r.responseDate,
       r.approvalCode,
       r.avsResponseCode,
       p.cardIssueNumber,
       p.cardStartMonth,
       p.cardStartYear,
       p.encodedCardId,
       c.renewalFlag
  FROM CreditCardTransaction c,PaymentechRequest p, PaymentechResponse r 
 WHERE c.xactionId = p.xactionId AND c.xactionId = r.xactionId AND CCTranStatusId = 3  AND r.errorMessage IS NULL;
 -- and batchId = at_batchId;

END;;
DELIMITER ;
