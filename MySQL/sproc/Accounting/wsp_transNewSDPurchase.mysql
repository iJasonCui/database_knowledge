DELIMITER ;;
DROP PROCEDURE IF EXISTS  wsp_transNewSDPurchase;
CREATE DEFINER='root'@'10.10.26.21' PROCEDURE wsp_transNewSDPurchase (
 at_xactionId          DECIMAL(12,0)
,at_userId             DECIMAL(12,0)
,at_cardId             INT
,at_passDetailId       SMALLINT
,at_passes             SMALLINT
,at_cost               DECIMAL(10,2)
,at_tax                DECIMAL(10,2)
,at_costUSD            DECIMAL(5,2)
,at_taxUSD             DECIMAL(5,2)
,at_xactionTypeId      TINYINT
,at_contentId          SMALLINT
,at_adminUserId        INT
,at_paymentNumber      VARCHAR(40)
,at_cardProcessor      CHAR(1)
,at_dateNow            DATETIME
,at_dateExpiry         DATETIME
,at_purchaseTypeId     TINYINT
,at_billingLocationId  SMALLINT
,at_currencyId         TINYINT
,at_passTypeId         SMALLINT
,at_balance            SMALLINT
)
BEGIN

DECLARE EXIT HANDLER FOR SQLWARNING
BEGIN
   ROLLBACK;
END;

DECLARE	EXIT HANDLER FOR SQLEXCEPTION
BEGIN
   ROLLBACK;
END;

START TRANSACTION;

-- set admin purchase record
IF at_adminUserId > 0 
THEN 
   INSERT INTO AdminAccountTransaction (xactionId, adminUserId, userId, dateCreated) VALUES (at_xactionId, at_adminUserId, at_userId, at_dateNow);
END IF;

-- update CreditCard dateLastUsed column
-- don't need to check for at_at_error
IF at_cardId > 0 
THEN
   UPDATE CreditCard SET dateLastUsed = at_dateNow WHERE creditCardId = at_cardId;
END IF;

-- insert purchase record
INSERT INTO Purchase (xactionId,purchaseTypeId,billingLocationId,purchaseOfferDetailId,currencyId,cost
        ,costUSD,tax,taxUSD,userId,dateCreated,creditCardId,cardProcessor,paymentNumber,xactionTypeId
    ) VALUES (at_xactionId,at_purchaseTypeId,at_billingLocationId,at_passDetailId,at_currencyId,at_cost
        ,at_costUSD,at_tax,at_taxUSD,at_userId,at_dateNow,at_cardId,at_cardProcessor,at_paymentNumber,at_xactionTypeId
    );

-- insert transaction record
INSERT INTO SDTransaction (
         xactionId
        ,userId
        ,eventId
        ,passTypeId
        ,passes
        ,xactionTypeId
        ,contentId
        ,dateCreated
    ) VALUES (
         at_xactionId
        ,at_userId
        ,-1 -- purchase
        ,at_passTypeId
        ,at_passes
        ,at_xactionTypeId
        ,at_contentId
        ,at_dateNow
    );

-- check passes > 0 because declined purchases don't update balances
IF at_passes > 0 
THEN
   IF (SELECT 1 FROM SDBalance WHERE userId = at_userId AND passTypeId = at_passTypeId) IS NOT NULL 
   THEN 
            
                    UPDATE SDBalance
                       SET balance = balance + at_passes
                          ,dateModified = at_dateNow
                          ,dateExpiry = at_dateExpiry
                     WHERE userId = at_userId
                       AND passTypeId = at_passTypeId;
               
   ELSE
              
                    INSERT INTO SDBalance (
                         userId
                        ,passTypeId
                        ,balance
                        ,dateCreated
                        ,dateModified
                        ,dateExpiry
                    ) VALUES (
                         at_userId
                        ,at_passTypeId
                        ,at_passes
                        ,at_dateNow
                        ,at_dateNow
                        ,at_dateExpiry
                    );
   END IF;
END IF;

COMMIT;

/* ### DEFNCOPY: END OF DEFINITION */
END;;
DELIMITER ;
